server:
  port: 8121

#开发环境
env:
  host: ds.com

spring:
  application:
    name: nas-cloud-batch
  cloud:
    nacos:
      discovery:
        enabled: true
        server-addr: ${env.host}:8848
        username: nacos
        password: nacos

xxl:
  job:
    accessToken: default_token
    admin:
      addresses: http://${env.host}:8082/xxl-job-admin
    executor:
      address:
      appname: ${spring.application.name}
      ip:
      logpath:
      logretentiondays: 3
      port: 9999

dubbo:
  application:
    name: ${spring.application.name}
  protocol:    #Dubbo 服务暴露的协议配置，其中子属性 name 为协议名称，port 为协议端口（ -1 表示自增端口，从 20880 开始）
    name: dubbo
    port: -1  #dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；如果没有配置port，则自动采用默认端口，如果配置为-1，则会分配一个没有被占用的端口。Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控
  registry:
    #dubbo服务注册端口，注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port
    #其中前缀spring-cloud说明：挂载到 Spring Cloud注册中心
    address: spring-cloud://${env.host}:8848/?username=nacos&password=nacos
    #check: false  #关闭注册中心是否启动的相关检查,false表示不检查注册中心是否启动，就不会报错
  cloud:
    subscribed-services: *
  consumer:
    check: false  #关闭订阅服务是否启动的检查【检查时，没有服务提供者会报错】
